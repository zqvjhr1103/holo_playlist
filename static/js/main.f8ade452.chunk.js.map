{"version":3,"sources":["components/listButton.js","containers/playPlayList.js","containers/selectPlayList.js","components/addPlayList.js","app.js","index.js"],"names":["withStyles","theme","root","props","classes","className","List","ListItem","button","onClick","e","onEventSelectList","ListItemText","primary","listName","PlayPlayList","state","isPlaying","videoID","opts","height","width","currentIndex","this","setState","index","playList","playerVars","autoplay","disablekb","enablejsapi","fs","iv_load_policy","modestbranding","rel","showinfo","start","startTime","end","endTime","event","console","debug","target","getDuration","playStop","setMusic","playStart","setPlaybackQuality","setVolume","data","length","Dialog","fullScreen","open","onClose","scroll","disableBackdropClick","disableEscapeKeyDown","AppBar","position","color","Toolbar","IconButton","edge","Typography","variant","playListName","style","justifyContent","alignItems","textAlign","DialogContent","dividers","videoId","onReady","_onReady","onError","_onError","onApiChange","_onApiChange","onStateChange","_onStateChange","map","item","musicName","Component","SelectPlayList","readYoutubeFlag","playFlag","array","i","r","Math","floor","random","tmp","playLists","arrayShuffle","handleClickPlayFlag","selectPlayList","display","input","paper","background","padding","typography","icon","accept","id","multiple","type","onChange","onClickAddPlayList","htmlFor","Paper","App","JSON","parse","localStorage","getItem","files","flag","forEach","name","split","reader","FileReader","readAsText","onload","result","btoa","shift","push","clear","setItem","stringify","addPlayList","ReactDOM","render","document","getElementById"],"mappings":"qSAuBeA,eAjBA,SAAAC,GAAK,MAAK,CACrBC,KAAM,MAgBKF,EAbI,SAAAG,GAAU,IACjBC,EAAYD,EAAZC,QACR,OACI,qBAAKC,UAAWD,EAAQF,KAAxB,SACI,cAACI,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAUC,QAAM,EAACC,QAAS,SAAAC,GAAC,OAAIP,EAAMQ,qBAArC,SACI,cAACC,EAAA,EAAD,CAAcC,QAASV,EAAMW,oB,6DCuJlCC,E,kDAxJX,WAAYZ,GAAQ,IAAD,8BACf,cAAMA,IACDa,MAAQ,CACTC,WAAW,EACXC,QAAS,KACTC,KAAM,CACFC,OAAQ,MACRC,MAAO,OAEXC,cAAe,GATJ,E,6CAanB,WACIC,KAAKC,SAAS,CACVP,WAAW,M,sBAInB,WACIM,KAAKC,SAAS,CACVP,WAAW,M,sBAInB,SAASQ,GACLF,KAAKC,SAAS,CACVN,QAASK,KAAKpB,MAAMuB,SAASD,GAAOP,QACpCC,KAAM,CACFC,OAAQ,MACRC,MAAO,MACPM,WAAY,CAERC,SAAU,EAEVC,UAAW,EACXC,YAAa,EACbC,GAAI,EACJC,eAAgB,EAChBC,eAAgB,EAChBC,IAAK,EACLC,SAAU,EAEVC,MAAOb,KAAKpB,MAAMuB,SAASD,GAAOY,UAElCC,IAAKf,KAAKpB,MAAMuB,SAASD,GAAOc,UAGxCjB,aAAcG,M,sBAItB,SAASe,GAIL,GAHAC,QAAQC,MAAM,mBAAqBF,EAAMG,OAAOC,eAChDH,QAAQC,MAAM,aAAenB,KAAKP,MAAMC,WAEL,IAA/BuB,EAAMG,OAAOC,cAAjB,CAKA,IAA6B,IAAzBrB,KAAKP,MAAMC,UAGX,OAFAM,KAAKsB,gBACLtB,KAAKuB,SAAS,GAGlBvB,KAAKwB,YAELP,EAAMG,OAAOK,mBAAmB,SAChCR,EAAMG,OAAOM,UAAU,SAZnB1B,KAAKuB,SAAS,K,sBAetB,SAASN,GACLC,QAAQC,MAAM,a,0BAGlB,SAAaF,GACTC,QAAQC,MAAM,iB,4BAGlB,SAAeF,EAAOf,GAClBgB,QAAQC,MAAM,iBAAmBF,EAAMU,MACpB,IAAfV,EAAMU,OACN3B,KAAKsB,WACDtB,KAAKpB,MAAMuB,SAASyB,SAAW1B,EAAQ,EACvCF,KAAKuB,SAAS,GAEdvB,KAAKuB,SAASrB,EAAQ,M,oBAKlC,WAAU,IAAD,OACL,OACI,eAAC2B,EAAA,EAAD,CACIC,YAAU,EACVC,KAAM/B,KAAKpB,MAAMmD,KACjBC,QAAShC,KAAKpB,MAAMoD,QACpBC,OAAO,QACPC,qBAAqB,QACrBC,qBAAqB,QANzB,UAQI,gCACI,cAACC,EAAA,EAAD,CAAQC,SAAS,QAAQC,MAAM,UAA/B,SACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,KAAK,QAAQH,MAAM,UAAUpD,QAASc,KAAKpB,MAAMoD,QAA7D,SACI,cAAC,IAAD,MAEJ,cAACU,EAAA,EAAD,CAAYC,QAAQ,KAApB,SACK3C,KAAKpB,MAAMgE,oBAIxB,cAACL,EAAA,EAAD,OAEJ,qBAAKM,MAAO,CACRC,eAAgB,SAChBC,WAAY,SACZC,UAAW,UAHf,SAMI,eAACC,EAAA,EAAD,CAAeC,SAAS,OAAxB,UACI,cAAC,IAAD,CACIC,QAASnD,KAAKP,MAAME,QACpBC,KAAMI,KAAKP,MAAMG,KACjBwD,QAAS,SAACnC,GACN,EAAKoC,SAASpC,EAAO,EAAKxB,MAAMU,WAEpCmD,QAAStD,KAAKuD,SACdC,YAAaxD,KAAKyD,aAClBC,cAAe,SAACzC,GACZ,EAAK0C,eAAe1C,EAAO,EAAKxB,MAAMM,iBAG7CC,KAAKpB,MAAMuB,SAASyD,KAAI,SAACC,EAAM3D,GAC5B,OACI,cAAC,EAAD,CACIX,SAAUsE,EAAKC,UACf1E,kBAAmB,WACf,EAAKkC,WACL,EAAKC,SAASrB,qB,GA7I3B6D,aCmEZC,E,kDA3EX,WAAYpF,GAAQ,IAAD,8BACf,cAAMA,IACDa,MAAQ,CACTwE,iBAAiB,EACjBC,UAAU,EACVtB,aAAc,KACdzC,SAAU,CACN,CACI2D,UAAW,KACXnE,QAAS,KACTmB,UAAW,KACXE,QAAS,QAXN,E,uDAiBnB,WACIhB,KAAKC,SAAS,CACVgE,iBAAkBjE,KAAKP,MAAMwE,gBAC7BC,UAAWlE,KAAKP,MAAMyE,a,0BAI9B,SAAaC,GACT,IAAK,IAAIC,EAAKD,EAAMvC,OAAS,EAAI,EAAIwC,EAAGA,IAAK,CAGzC,IAAIC,EAAIC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,IAGpCK,EAAMN,EAAMC,GAChBD,EAAMC,GAAKD,EAAME,GACjBF,EAAME,GAAKI,EAEf,OAAON,I,4BAGX,SAAejE,GACXF,KAAKC,SAAS,CACV2C,aAAc5C,KAAKpB,MAAM8F,UAAUxE,GAAO0C,aAC1CzC,SAAUH,KAAK2E,aAAa3E,KAAKpB,MAAM8F,UAAUxE,GAAOC,c,oBAIhE,WAAU,IAAD,OACL,OACI,gCACKH,KAAKpB,MAAM8F,UAAUd,KAAI,SAACC,EAAM3D,GAC7B,OACI,cAAC,EAAD,CACIX,SAAUsE,EAAKjB,aACfxD,kBAAmB,WACc,IAAzByE,EAAK1D,SAASyB,SACd,EAAKgD,sBACL,EAAKC,eAAe3E,UAMxC,cAAC,EAAD,CACI+D,gBAAiBjE,KAAKP,MAAMwE,gBAC5BrB,aAAc5C,KAAKP,MAAMmD,aACzBzC,SAAUH,KAAKP,MAAMU,SACrB4B,KAAM/B,KAAKP,MAAMyE,SACjBlC,QAAS,WACL,EAAK4C,gC,GApEAb,a,yBCoDdtF,eAjDA,SAAAC,GAAK,MAAK,CACrBC,KAAM,CACFmG,QAAS,OACThC,eAAgB,UAEpBiC,MAAO,CACHD,QAAS,QAEbE,MAAO,CACHF,QAAS,OACThC,eAAgB,gBAChBC,WAAY,SACZkC,WAAY,qBACZnF,MAAO,QACPD,OAAQ,OACRqF,QAAS,OAEbC,WAAY,GAEZC,KAAM,MA8BK3G,EA1BK,SAAAG,GAAU,IAClBC,EAAYD,EAAZC,QACR,OACI,sBAAKC,UAAWD,EAAQF,KAAxB,UACI,uBACIG,UAAWD,EAAQkG,MACnBM,OAAO,WACPC,GAAG,wBACHC,UAAQ,EACRC,KAAK,OACLC,SAAU,SAAAtG,GACNP,EAAM8G,mBAAmBvG,MAGjC,uBAAOwG,QAAQ,wBAAf,SACI,eAACC,EAAA,EAAD,CACI9G,UAAWD,EAAQmG,MADvB,UAGI,cAAC,IAAD,CAAiBlG,UAAWD,EAAQuG,OACpC,cAAC1C,EAAA,EAAD,CAAY5D,UAAWD,EAAQsG,WAA/B,qCC6CLU,E,kDArFb,WAAYjH,GAAQ,IAAD,8BACjB,cAAMA,IACDa,MAAQ,CACXiF,UAAWoB,KAAKC,MAAMC,aAAaC,QAAQ,eAAiB,CAC1D,CACErD,aAAc,cACdzC,SAAU,MANC,E,+CAenB,SAAYhB,GAAI,IAAD,OACP+G,EAAQ/G,EAAEiC,OAAO8E,MACnBC,GAAO,EACXnG,KAAKP,MAAMiF,UAAU0B,SAAQ,SAACvC,GACxBA,EAAKjB,eAAiBsD,EAAM,GAAGG,KAAKC,MAAM,KAAK,KACjDH,GAAO,MAGX,IAAIzB,EAAY,GACgC,IAA5C1E,KAAKP,MAAMiF,UAAU,GAAGvE,SAASyB,QAAgBuE,IACnDzB,EAAY1E,KAAKP,MAAMiF,WAEzB,IAAIvE,EAAW,GACf,GAAI+F,EAAMtE,OAAS,EAAG,CACpB,IAAI2E,EAAS,IAAIC,WACjBD,EAAOE,WAAWP,EAAM,IACxBK,EAAOG,OAAS,SAAAvH,GACd,IAAIgF,EAAQhF,EAAEiC,OAAOuF,OAAOL,MAAM,MAElB,6DADFM,KAAKzC,EAAM,KAKzBA,EAAM0C,QACN1C,EAAMiC,SAAQ,SAACvC,GACA,KAATA,GACF1D,EAAS2G,KAAK,CACZhD,UAAWD,EAAKyC,MAAM,KAAK,GAC3B3G,QAASkE,EAAKyC,MAAM,KAAK,GACzBxF,UAAW+C,EAAKyC,MAAM,KAAK,GAC3BtF,QAAS6C,EAAKyC,MAAM,KAAK,QAK/B5B,EAAUoC,KAAK,CACblE,aAAcsD,EAAM,GAAGG,KAAKC,MAAM,KAAK,GACvCnG,SAAUA,IAEZ,EAAKF,SAAS,CACZyE,UAAWA,IAEbsB,aAAae,QACbf,aAAagB,QAAQ,YAAalB,KAAKmB,UAAUvC,KAvB/CxD,QAAQC,MAAM,0B,oBA4BtB,WAAU,IAAD,OACP,OACE,sBAAKrC,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,cAACsD,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAM,UAAhC,SACE,cAACI,EAAA,EAAD,CAAYC,QAAQ,KAApB,yCAKJ,uBAAM7D,UAAU,WAAhB,UACE,cAAC,EAAD,CAAgB4F,UAAW1E,KAAKP,MAAMiF,YACtC,cAAC,EAAD,CACEgB,mBAAoB,SAACvG,GACnB,EAAK+H,YAAY/H,gB,GA9Eb4E,aCJlBoD,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.f8ade452.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\n\r\nconst styles = theme => ({\r\n    root: {}\r\n});\r\n\r\nconst ListButton = props => {\r\n    const { classes } = props;\r\n    return (\r\n        <div className={classes.root}>\r\n            <List>\r\n                <ListItem button onClick={e => props.onEventSelectList()}>\r\n                    <ListItemText primary={props.listName} />\r\n                </ListItem>\r\n            </List>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(ListButton);\r\n","import React, { Component } from 'react';\r\n\r\nimport YouTube from 'react-youtube';\r\n\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\n\r\nimport ListButton from \"../components/listButton.js\";\r\n\r\nclass PlayPlayList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isPlaying: false,\r\n            videoID: null,\r\n            opts: {\r\n                height: '180',\r\n                width: '320',\r\n            },\r\n            currentIndex: -1\r\n        };\r\n    }\r\n\r\n    playStart() {\r\n        this.setState({\r\n            isPlaying: true,\r\n        })\r\n    }\r\n\r\n    playStop() {\r\n        this.setState({\r\n            isPlaying: false,\r\n        })\r\n    }\r\n\r\n    setMusic(index) {\r\n        this.setState({\r\n            videoID: this.props.playList[index].videoID,\r\n            opts: {\r\n                height: '180',\r\n                width: '320',\r\n                playerVars: {\r\n                    // https://developers.google.com/youtube/player_parameters\r\n                    autoplay: 1,        // 自動再生オン\r\n                    //controls: 0,      // プレーヤーコントロール非表示\r\n                    disablekb: 1,       // キーボード操作オフ\r\n                    enablejsapi: 1,     // api制御オン\r\n                    fs: 0,              // 全画面表示ボタン非表示\r\n                    iv_load_policy: 3,  // アノテーション非表示\r\n                    modestbranding: 1,  // YouTubeロゴ非表示\r\n                    rel: 0,             // 再生した動画と同じチャンネルから関連動画を選択\r\n                    showinfo: 0,        // タイトルやユーザー情報を非表示（2018年9月25日以降は利用不可）\r\n                    // 動画の先頭から指定された秒数分進めた位置から動画の再生が開始\r\n                    start: this.props.playList[index].startTime,\r\n                    // 動画を特定の位置で停止させる場合に、再生を開始してからの時間（秒数）でその位置を指定\r\n                    end: this.props.playList[index].endTime\r\n                }\r\n            },\r\n            currentIndex: index\r\n        });\r\n    }\r\n\r\n    _onReady(event) {\r\n        console.debug(\"onReady. Length:\" + event.target.getDuration())\r\n        console.debug(\"isPlay is \" + this.state.isPlaying)\r\n        // 初回プレイリスト選択時\r\n        if (event.target.getDuration() === 0) {\r\n            this.setMusic(0)\r\n            return;\r\n        }\r\n        // 二回目以降プレイリスト選択時（再生中にダイアログ閉じるとtureのまま）\r\n        if (this.state.isPlaying === true) {\r\n            this.playStop()\r\n            this.setMusic(0)\r\n            return;\r\n        }\r\n        this.playStart()\r\n        // https://developers.google.com/youtube/iframe_api_reference?hl=ja\r\n        event.target.setPlaybackQuality(\"small\");\r\n        event.target.setVolume(50);\r\n    }\r\n\r\n    _onError(event) {\r\n        console.debug(\"onError\")\r\n    }\r\n\r\n    _onApiChange(event) {\r\n        console.debug(\"onApiChange\")\r\n    }\r\n\r\n    _onStateChange(event, index) {\r\n        console.debug(\"onStateChange:\" + event.data)\r\n        if (event.data === 0) {\r\n            this.playStop()\r\n            if (this.props.playList.length === index + 1) {\r\n                this.setMusic(0)\r\n            } else {\r\n                this.setMusic(index + 1)\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Dialog\r\n                fullScreen\r\n                open={this.props.open}\r\n                onClose={this.props.onClose}\r\n                scroll=\"paper\"\r\n                disableBackdropClick=\"false\"\r\n                disableEscapeKeyDown=\"false\"\r\n            >\r\n                <div>\r\n                    <AppBar position=\"fixed\" color=\"default\">\r\n                        <Toolbar>\r\n                            <IconButton edge=\"start\" color=\"inherit\" onClick={this.props.onClose}>\r\n                                <CloseIcon />\r\n                            </IconButton>\r\n                            <Typography variant=\"h6\">\r\n                                {this.props.playListName}\r\n                            </Typography>\r\n                        </Toolbar>\r\n                    </AppBar>\r\n                    <Toolbar />\r\n                </div>\r\n                <div style={{\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    textAlign: \"center\"\r\n                }}\r\n                >\r\n                    <DialogContent dividers=\"true\">\r\n                        <YouTube\r\n                            videoId={this.state.videoID}\r\n                            opts={this.state.opts}\r\n                            onReady={(event) => {\r\n                                this._onReady(event, this.state.playList);\r\n                            }}\r\n                            onError={this._onError}\r\n                            onApiChange={this._onApiChange}\r\n                            onStateChange={(event) => {\r\n                                this._onStateChange(event, this.state.currentIndex);\r\n                            }}\r\n                        />\r\n                        {this.props.playList.map((item, index) => {\r\n                            return (\r\n                                <ListButton\r\n                                    listName={item.musicName}\r\n                                    onEventSelectList={() => {\r\n                                        this.playStop()\r\n                                        this.setMusic(index);\r\n                                    }}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </DialogContent>\r\n                </div>\r\n            </Dialog >\r\n        );\r\n    }\r\n}\r\n\r\nexport default PlayPlayList;\r\n","import React, { Component } from \"react\";\r\n\r\nimport ListButton from \"../components/listButton.js\";\r\nimport PlayPlayList from \"../containers/playPlayList.js\"\r\n\r\nclass SelectPlayList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            readYoutubeFlag: false,\r\n            playFlag: false,\r\n            playListName: null,\r\n            playList: [\r\n                {\r\n                    musicName: null,\r\n                    videoID: null,\r\n                    startTime: null,\r\n                    endTime: null\r\n                }\r\n            ]\r\n        };\r\n    }\r\n\r\n    handleClickPlayFlag() {\r\n        this.setState({\r\n            readYoutubeFlag: !this.state.readYoutubeFlag,\r\n            playFlag: !this.state.playFlag,\r\n        });\r\n    }\r\n\r\n    arrayShuffle(array) {\r\n        for (var i = (array.length - 1); 0 < i; i--) {\r\n\r\n            // 0〜(i+1)の範囲で値を取得\r\n            var r = Math.floor(Math.random() * (i + 1));\r\n\r\n            // 要素の並び替えを実行\r\n            var tmp = array[i];\r\n            array[i] = array[r];\r\n            array[r] = tmp;\r\n        }\r\n        return array;\r\n    }\r\n\r\n    selectPlayList(index) {\r\n        this.setState({\r\n            playListName: this.props.playLists[index].playListName,\r\n            playList: this.arrayShuffle(this.props.playLists[index].playList)\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.playLists.map((item, index) => {\r\n                    return (\r\n                        <ListButton\r\n                            listName={item.playListName}\r\n                            onEventSelectList={() => {\r\n                                if (item.playList.length !== 0) {\r\n                                    this.handleClickPlayFlag();\r\n                                    this.selectPlayList(index);\r\n                                }\r\n                            }}\r\n                        />\r\n                    );\r\n                })}\r\n                <PlayPlayList\r\n                    readYoutubeFlag={this.state.readYoutubeFlag}\r\n                    playListName={this.state.playListName}\r\n                    playList={this.state.playList}\r\n                    open={this.state.playFlag}\r\n                    onClose={() => {\r\n                        this.handleClickPlayFlag();\r\n                    }}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SelectPlayList;\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport PlaylistAddIcon from '@material-ui/icons/PlaylistAdd';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n    },\r\n    input: {\r\n        display: \"none\"\r\n    },\r\n    paper: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        background: \"rgb(245, 245, 245)\",\r\n        width: \"120px\",\r\n        height: \"20px\",\r\n        padding: \"7px\"\r\n    },\r\n    typography: {\r\n    },\r\n    icon: {\r\n    }\r\n});\r\n\r\nconst AddPlayList = props => {\r\n    const { classes } = props;\r\n    return (\r\n        <div className={classes.root}>\r\n            <input\r\n                className={classes.input}\r\n                accept=\"playlist\"\r\n                id=\"contained-button-file\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={e => {\r\n                    props.onClickAddPlayList(e);\r\n                }}\r\n            />\r\n            <label htmlFor=\"contained-button-file\">\r\n                <Paper\r\n                    className={classes.paper}\r\n                >\r\n                    <PlaylistAddIcon className={classes.icon} />\r\n                    <Typography className={classes.typography} >Add PlayList</Typography>\r\n                </Paper>\r\n            </label>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default withStyles(styles)(AddPlayList);\r\n","import React, { Component } from \"react\";\nimport \"./assets/app.css\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport SelectPlayList from \"./containers/selectPlayList.js\";\nimport AddPlayList from \"./components/addPlayList.js\"\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playLists: JSON.parse(localStorage.getItem(\"playLists\")) || [\n        {\n          playListName: \"No playlist\",\n          playList: []\n        }\n      ]\n    };\n    if (false) {\n      localStorage.clear();\n    }\n  }\n\n  addPlayList(e) {\n    const files = e.target.files;\n    var flag = true;\n    this.state.playLists.forEach((item) => {\n      if (item.playListName === files[0].name.split(\".\")[0]) {\n        flag = false\n      }\n    })\n    var playLists = []\n    if (this.state.playLists[0].playList.length !== 0 && flag) {\n      playLists = this.state.playLists\n    }\n    var playList = []\n    if (files.length > 0) {\n      var reader = new FileReader();\n      reader.readAsText(files[0]);\n      reader.onload = e => {\n        var array = e.target.result.split(\"\\n\")\n        var encoded = btoa(array[0]);\n        if (encoded !== \"dXpjSjhRWFpuZE1CNDdaU2E5V1hVR1l3NXRnaWljN1RzanNnektXVw0=\") {\n          console.debug(\"Password Incorrect\")\n          return;\n        }\n        array.shift()\n        array.forEach((item) => {\n          if (item !== \"\") {\n            playList.push({\n              musicName: item.split(\",\")[0],\n              videoID: item.split(\",\")[1],\n              startTime: item.split(\",\")[2],\n              endTime: item.split(\",\")[3]\n            })\n          }\n        })\n\n        playLists.push({\n          playListName: files[0].name.split(\".\")[0],\n          playList: playList\n        })\n        this.setState({\n          playLists: playLists\n        });\n        localStorage.clear();\n        localStorage.setItem(\"playLists\", JSON.stringify(playLists));\n      };\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <AppBar position=\"static\" color=\"default\">\n            <Typography variant=\"h6\">\n              Hololive Music PlayList\n            </Typography>\n          </AppBar>\n        </header>\n        <main className=\"App-main\">\n          <SelectPlayList playLists={this.state.playLists} />\n          <AddPlayList\n            onClickAddPlayList={(e) => {\n              this.addPlayList(e)\n            }} />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/index.css';\nimport App from './app.js';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}